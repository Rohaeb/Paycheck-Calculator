
from tkinter import *
root =Tk()
#main window
myLabel1= Label(root, text= "Begin Calculating your check!")
myLabel2= Label(root, text= "Please know that this is an estimate!")

myLabel1.grid(row=0, column=1)
myLabel2.grid(row=1, column=1)

#pop up for first button clicked

#first task of asking how many hours the user worked
hours_label = Label(root, text="How many hours did you work in a week?")
hours_label.grid(row=2, column=1)
hours_entry = Entry(root, width=50)
hours_entry.grid(row=3, column=1)


def enter_hours():
    Hours= "Hours worked: " + hours_entry.get()
    myLabel = Label(root, text=Hours)
    myLabel.grid(row=4, column=1)

myButton2= Button(root, text= "Enter", command=enter_hours)
myButton2.grid(row=5, column=1)

#Second task for calculating pay rate

pay_rate_label = Label(root, text="What is your hourly rate?")
pay_rate_label.grid(row=6, column=1)
pay_rate_entry = Entry(root, width=50)
pay_rate_entry.grid(row=7, column=1)

def enter_pay_rate():
    pay_rate = "Pay Rate: $" + pay_rate_entry.get()
    myLabel = Label(root, text=pay_rate)
    myLabel.grid(row=8, column=1)


myButton3 = Button(root, text="Enter",command=enter_pay_rate)
myButton3.grid(row=9, column=1)

def calculate_total_pay():
    try: 
        hours=float(hours_entry.get())
        pay_rate=float(pay_rate_entry.get())
        total_pay = hours * pay_rate
        result_label = Label(root, text="Total pay: $" + str (total_pay))
        result_label.grid(row=10, column=1)
    except ValueError:
        error_label = Label(root, text="Please enter valid numbers.")
        error_label.grid(row=10, column=1)

myButton4 = Button(root, text="Calculate Gross pay", command= calculate_total_pay)
myButton4.grid(row=11, column=1)

#Third Task for calculating overtime

overtime_pay_label= Label(root, text="How many hours of overtime?")
overtime_pay_label.grid(row=12, column=1)
overtime_pay_entry= Entry(root, width=50)
overtime_pay_entry.grid(row=13, column=1)



def calculate_overtime():
    try:
        overtime_base= 1.5
        hours=float(hours_entry.get())
        pay_rate=float(pay_rate_entry.get())
        total_pay = hours * pay_rate
        overtime_hours= float(overtime_pay_entry.get())
        overtime_pay= overtime_hours * pay_rate * overtime_base
        total_overtime_pay= total_pay + overtime_pay
        result_label = Label(root, text="Total pay with overtime: $" + str(total_overtime_pay))
        result_label.grid(row=14, column=1)
    except ValueError:
        error_label = Label(root, text="Please enter valid numbers.")
        error_label.grid(row=14, column=1)


myButton0 = Button(root, text="Calculate", command=calculate_overtime)
myButton0.grid(row=15, column=1)


#entry for tax deductions

tax_deductions_label = Label(root, text="What is your tax rate?")
tax_deductions_label.grid(row=16, column=1)
tax_deductions_entry = Entry(root, width=50)
tax_deductions_entry.grid(row=17, column=1)



def calculate_tax_rate():
    try:
        hours=float(hours_entry.get())
        pay_rate=float(pay_rate_entry.get())
        total_pay = hours * pay_rate
        tax_rate=float(tax_deductions_entry.get())
        
        overtime_base= 1.5
        hours=float(hours_entry.get())
        pay_rate=float(pay_rate_entry.get())
        total_pay = hours * pay_rate
        overtime_hours= float(overtime_pay_entry.get())
        overtime_pay= overtime_hours * pay_rate * overtime_base
        total_overtime_pay= total_pay + overtime_pay

        total_pay_withtax= total_overtime_pay* (1-tax_rate /100)
        result_label = Label(root, text="Total pay with taxes deducted: $" + str(total_pay_withtax))
        result_label.grid(row=18, column=1)
    except ValueError:
        error_label = Label(root, text="Please enter valid numbers.")
        error_label.grid(row=18, column=1)

myButton5 = Button(root, text="Calculate", command=calculate_tax_rate)
myButton5.grid(row=19, column=1)
    

any_deductions_label = Label(root, text="Enter any deductions you might have!")
any_deductions_label.grid(row=20, column=1)
any_deductions_entry= Entry(root, width=50)
any_deductions_entry.grid(row=21, column=1)

def calculate_deductions():
    try:
        hours=float(hours_entry.get())
        pay_rate=float(pay_rate_entry.get())
        total_pay = hours * pay_rate
        tax_rate=float(tax_deductions_entry.get())
        total_pay_withtax= total_pay * (1-tax_rate /100)

        overtime_base= 1.5
        hours=float(hours_entry.get())
        pay_rate=float(pay_rate_entry.get())
        total_pay = hours * pay_rate
        overtime_hours= float(overtime_pay_entry.get())
        overtime_pay= overtime_hours * pay_rate * overtime_base
        total_overtime_pay= total_pay + overtime_pay
        
        total_pay_withtax= total_overtime_pay* (1-tax_rate /100)

        deductions=float(any_deductions_entry.get())
        deductions_pay = total_pay_withtax - deductions
        result_label = Label(root, text="Final Pay with deductions: $"+ str(deductions_pay))
        result_label.grid(row=22, column=1)
    except ValueError:
        error_label = Label(root, text="Please enter valid numbers.")
        error_label.grid(row=22, column=1)
        
myButton6 = Button(root, text="Calculate", command=calculate_deductions)
myButton6.grid(row=23, column=1)

button_quit = Button(root, text= "Exit Program", command= root.quit)
button_quit.grid(row=24, column=1)


root.mainloop()
